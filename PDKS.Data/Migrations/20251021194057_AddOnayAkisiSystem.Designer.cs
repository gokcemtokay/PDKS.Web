// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PDKS.Data.Context;

#nullable disable

namespace PDKS.Data.Migrations
{
    [DbContext(typeof(PDKSDbContext))]
    [Migration("20251021194057_AddOnayAkisiSystem")]
    partial class AddOnayAkisiSystem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PDKS.Data.Entities.Anket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<string>("AnketBasligi")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<bool>("Anonim")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HedefKatilimcilar")
                        .HasColumnType("text");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OlusturanKullaniciId");

                    b.HasIndex("SirketId");

                    b.ToTable("Anketler");
                });

            modelBuilder.Entity("PDKS.Data.Entities.AnketCevap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cevap")
                        .HasColumnType("text");

                    b.Property<DateTime>("CevapTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<int>("SoruId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.HasIndex("SoruId");

                    b.ToTable("AnketCevaplari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.AnketSoru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnketId")
                        .HasColumnType("integer");

                    b.Property<string>("Secenekler")
                        .HasColumnType("text");

                    b.Property<int>("Sira")
                        .HasColumnType("integer");

                    b.Property<string>("SoruMetni")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("SoruTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("Zorunlu")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("AnketId");

                    b.ToTable("AnketSorulari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Arac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<int>("GuncelKm")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("KaskoTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Marka")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Model")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Plaka")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Renk")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("SigortaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("SonMuayeneTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("TahsisliPersonelId")
                        .HasColumnType("integer");

                    b.Property<string>("YakitTipi")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("Yil")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Plaka")
                        .IsUnique();

                    b.HasIndex("SirketId");

                    b.HasIndex("TahsisliPersonelId");

                    b.ToTable("Araclar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.AracKullanimRaporu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AracId")
                        .HasColumnType("integer");

                    b.Property<int>("AracTalebiId")
                        .HasColumnType("integer");

                    b.Property<int>("BaslangicKm")
                        .HasColumnType("integer");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("BitisKm")
                        .HasColumnType("integer");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("DigerGiderler")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FaturaDosyalari")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Notlar")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("YakitTutari")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AracId");

                    b.HasIndex("AracTalebiId");

                    b.HasIndex("PersonelId");

                    b.ToTable("AracKullanimRaporlari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.AracTalebi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Amac")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int?>("AracId")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("DonusSaati")
                        .HasColumnType("interval");

                    b.Property<string>("DonusSehri")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("DonusTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GidisSehri")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<TimeSpan>("KalkisSaati")
                        .HasColumnType("interval");

                    b.Property<DateTime>("KalkisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OnayDurumu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TalepTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("YolcuSayisi")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AracId");

                    b.HasIndex("PersonelId");

                    b.HasIndex("SirketId");

                    b.ToTable("AracTalepleri");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Avans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal?>("KalanBorc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("OdemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("OdendiMi")
                        .HasColumnType("boolean");

                    b.Property<string>("OnayDurumu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("OnayTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("OnaylayanKullaniciId")
                        .HasColumnType("integer");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<string>("RedNedeni")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int?>("TaksitSayisi")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TalepTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OnaylayanKullaniciId");

                    b.HasIndex("PersonelId");

                    b.ToTable("Avanslar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.AvansTalebi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DekontDosyasi")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("OdemeSekli")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("OdemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OnayDurumu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<string>("Sebep")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.Property<int?>("TaksitSayisi")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TalepTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.HasIndex("SirketId");

                    b.ToTable("AvansTalepleri");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Bildirim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("integer");

                    b.Property<string>("Link")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Mesaj")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Okundu")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("OkunmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ReferansId")
                        .HasColumnType("integer");

                    b.Property<string>("ReferansTip")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Tip")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId", "Okundu");

                    b.ToTable("Bildirimler");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Cihaz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CihazAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cihaz_adi");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean")
                        .HasColumnName("durum");

                    b.Property<string>("IPAdres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ip_adres");

                    b.Property<string>("Lokasyon")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("lokasyon");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("olusturma_tarihi");

                    b.Property<int?>("SirketId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("SonBaglantiZamani")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("son_baglanti_zamani");

                    b.HasKey("Id");

                    b.HasIndex("SirketId");

                    b.ToTable("cihazlar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.CihazLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CihazId")
                        .HasColumnType("integer");

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("log_mesaji");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("log_tarihi");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("log_tipi");

                    b.HasKey("Id");

                    b.HasIndex("CihazId");

                    b.ToTable("CihazLoglari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Departman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Kod")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.Property<int?>("UstDepartmanId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SirketId");

                    b.HasIndex("UstDepartmanId");

                    b.ToTable("Departmanlar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.DeviceToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<string>("DeviceInfo")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("SonKullanimTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId", "Token")
                        .IsUnique();

                    b.ToTable("DeviceTokens");
                });

            modelBuilder.Entity("PDKS.Data.Entities.DosyaTalebi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("DosyaAdi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("DosyaTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OnayNotu")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime?>("OnayTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("OnaylayanKullaniciId")
                        .HasColumnType("integer");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TalepTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("YuklemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("YuklenenDosya")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("OnaylayanKullaniciId");

                    b.HasIndex("PersonelId");

                    b.HasIndex("SirketId");

                    b.ToTable("DosyaTalepleri");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Duyuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<bool>("AnaSayfadaGoster")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<DateTime?>("BitisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EkDosyalar")
                        .HasColumnType("text");

                    b.Property<string>("HedefDepartmanlar")
                        .HasColumnType("text");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.Property<string>("Tip")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("OlusturanKullaniciId");

                    b.HasIndex("SirketId");

                    b.ToTable("Duyurular");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Etkinlik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DuzenleyenKullaniciId")
                        .HasColumnType("integer");

                    b.Property<string>("EtkinlikAdi")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("EtkinlikTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("HedefKatilimcilar")
                        .HasColumnType("text");

                    b.Property<string>("KapakResmi")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("KatilimZorunlu")
                        .HasColumnType("boolean");

                    b.Property<int?>("KontenjanSayisi")
                        .HasColumnType("integer");

                    b.Property<string>("Konum")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DuzenleyenKullaniciId");

                    b.HasIndex("SirketId");

                    b.ToTable("Etkinlikler");
                });

            modelBuilder.Entity("PDKS.Data.Entities.EtkinlikKatilimci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EtkinlikId")
                        .HasColumnType("integer");

                    b.Property<string>("KatilimDurumu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("KatilimTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Not")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EtkinlikId");

                    b.HasIndex("PersonelId");

                    b.ToTable("EtkinlikKatilimcilari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Forum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<string>("ForumAdi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Ikon")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Sira")
                        .HasColumnType("integer");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SirketId");

                    b.ToTable("Forumlar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.ForumKonu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<int>("ForumId")
                        .HasColumnType("integer");

                    b.Property<int>("GoruntulemeSayisi")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Kilitli")
                        .HasColumnType("boolean");

                    b.Property<int>("OlusturanPersonelId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Sabitlenmis")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ForumId");

                    b.HasIndex("OlusturanPersonelId");

                    b.ToTable("ForumKonulari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.ForumMesaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BegeniSayisi")
                        .HasColumnType("integer");

                    b.Property<string>("Dosyalar")
                        .HasColumnType("text");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("KonuId")
                        .HasColumnType("integer");

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("MesajTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<bool>("Silindi")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("KonuId");

                    b.HasIndex("PersonelId");

                    b.ToTable("ForumMesajlari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.GirisCikis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CihazId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CikisZamani")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("ElleGiris")
                        .HasColumnType("boolean");

                    b.Property<int?>("ErkenCikisSuresi")
                        .HasColumnType("integer");

                    b.Property<int?>("FazlaMesaiSuresi")
                        .HasColumnType("integer");

                    b.Property<int?>("GecKalmaSuresi")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("GirisZamani")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Not")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CihazId");

                    b.HasIndex("GirisZamani");

                    b.HasIndex("PersonelId", "GirisZamani");

                    b.ToTable("GirisCikislar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Gorev", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<int>("AtayanPersonelId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("BaslangicTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime?>("BitisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Dosyalar")
                        .HasColumnType("text");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Etiketler")
                        .HasColumnType("text");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Oncelik")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.Property<int>("TamamlanmaYuzdesi")
                        .HasColumnType("integer");

                    b.Property<int?>("UstGorevId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AtayanPersonelId");

                    b.HasIndex("SirketId");

                    b.HasIndex("UstGorevId");

                    b.ToTable("Gorevler");
                });

            modelBuilder.Entity("PDKS.Data.Entities.GorevAtama", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AtamaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GorevId")
                        .HasColumnType("integer");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<bool>("Tamamlandi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("TamamlanmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GorevId");

                    b.HasIndex("PersonelId");

                    b.ToTable("GorevAtamalari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.GorevTanimi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<string>("DeneyimSeviyesi")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("DepartmanId")
                        .HasColumnType("integer");

                    b.Property<string>("GerekliNitelikler")
                        .HasColumnType("text");

                    b.Property<string>("GorevAdi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("MaasAraligiMax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MaasAraligiMin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DepartmanId");

                    b.HasIndex("SirketId");

                    b.ToTable("GorevTanimlari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.GorevYorum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Dosyalar")
                        .HasColumnType("text");

                    b.Property<int>("GorevId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<string>("Yorum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("YorumTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GorevId");

                    b.HasIndex("PersonelId");

                    b.ToTable("GorevYorumlari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Izin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IzinGunSayisi")
                        .HasColumnType("integer");

                    b.Property<string>("IzinTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OnayDurumu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("OnayTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("OnaylayanKullaniciId")
                        .HasColumnType("integer");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<string>("RedNedeni")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("TalepTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("OnaylayanKullaniciId");

                    b.HasIndex("PersonelId");

                    b.ToTable("Izinler");
                });

            modelBuilder.Entity("PDKS.Data.Entities.IzinHakki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BabalikIzin")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("EvlilikIzin")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("HastalikIzin")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("KalanIzin")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("KullanilanIzin")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("MazeretiIzin")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("OlumIzin")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.Property<decimal>("UcretsizIzin")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Yil")
                        .HasColumnType("integer");

                    b.Property<decimal>("YillikIzinGun")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.HasIndex("SirketId");

                    b.ToTable("IzinHaklari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("SifreHash")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime?>("SonGirisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PersonelId")
                        .IsUnique();

                    b.HasIndex("RolId");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.KullaniciSirket", b =>
                {
                    b.Property<int>("KullaniciId")
                        .HasColumnType("integer")
                        .HasColumnName("kullanici_id");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer")
                        .HasColumnName("sirket_id");

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean")
                        .HasColumnName("aktif");

                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("olusturma_tarihi");

                    b.Property<bool>("Varsayilan")
                        .HasColumnType("boolean")
                        .HasColumnName("varsayilan");

                    b.HasKey("KullaniciId", "SirketId");

                    b.HasIndex("SirketId");

                    b.ToTable("kullanici_sirketler");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IpAdresi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Islem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("integer");

                    b.Property<string>("LogLevel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Loglar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.MalzemeTalebi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Birim")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("MalzemeAdi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("Miktar")
                        .HasColumnType("integer");

                    b.Property<string>("OnayDurumu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("OnayTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TalepTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("TeslimEdenKullaniciId")
                        .HasColumnType("integer");

                    b.Property<string>("TeslimNotu")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime?>("TeslimTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.HasIndex("SirketId");

                    b.HasIndex("TeslimEdenKullaniciId");

                    b.ToTable("MalzemeTalepleri");
                });

            modelBuilder.Entity("PDKS.Data.Entities.MasrafTalebi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Faturalar")
                        .HasColumnType("text");

                    b.Property<decimal?>("KdvOrani")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("KdvTutari")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MasrafTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("OdemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OnayDurumu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TalepTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.HasIndex("SirketId");

                    b.ToTable("MasrafTalepleri");
                });

            modelBuilder.Entity("PDKS.Data.Entities.MazeretBildirimi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("EkDosyalar")
                        .HasColumnType("text");

                    b.Property<string>("MazeretTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OnayDurumu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("OnayTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("OnaylayiciPersonelId")
                        .HasColumnType("integer");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("OnaylayiciPersonelId");

                    b.HasIndex("PersonelId");

                    b.HasIndex("SirketId");

                    b.ToTable("MazeretBildirimleri");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Mesai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<TimeSpan>("BaslangicSaati")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("BitisSaati")
                        .HasColumnType("interval");

                    b.Property<decimal>("FazlaMesaiSaati")
                        .HasColumnType("numeric");

                    b.Property<decimal>("HaftaSonuMesaiSaati")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MesaiTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OnayDurumu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("OnayTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("OnaylayanKullaniciId")
                        .HasColumnType("integer");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<string>("RedNedeni")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<decimal>("ResmiTatilMesaiSaati")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("ToplamSaat")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("OnaylayanKullaniciId");

                    b.HasIndex("PersonelId");

                    b.ToTable("Mesailer");
                });

            modelBuilder.Entity("PDKS.Data.Entities.OnayAdimi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdimAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("EscalateKullaniciId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OnayAkisiId")
                        .HasColumnType("integer");

                    b.Property<int?>("OnaylayanDepartmanId")
                        .HasColumnType("integer");

                    b.Property<int?>("OnaylayanKullaniciId")
                        .HasColumnType("integer");

                    b.Property<int?>("OnaylayanRolId")
                        .HasColumnType("integer");

                    b.Property<string>("OnaylayanTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Sira")
                        .HasColumnType("integer");

                    b.Property<int?>("TimeoutGun")
                        .HasColumnType("integer");

                    b.Property<bool>("Zorunlu")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("OnayAkisiId");

                    b.HasIndex("OnaylayanDepartmanId");

                    b.HasIndex("OnaylayanKullaniciId");

                    b.HasIndex("OnaylayanRolId");

                    b.ToTable("OnayAdimlari", (string)null);
                });

            modelBuilder.Entity("PDKS.Data.Entities.OnayAkisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AkisAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<int?>("AracTalebiId")
                        .HasColumnType("integer");

                    b.Property<int?>("AvansTalebiId")
                        .HasColumnType("integer");

                    b.Property<int?>("DosyaTalebiId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("MalzemeTalebiId")
                        .HasColumnType("integer");

                    b.Property<int?>("MasrafTalebiId")
                        .HasColumnType("integer");

                    b.Property<string>("ModulTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("SeyahatTalebiId")
                        .HasColumnType("integer");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AracTalebiId");

                    b.HasIndex("AvansTalebiId");

                    b.HasIndex("DosyaTalebiId");

                    b.HasIndex("MalzemeTalebiId");

                    b.HasIndex("MasrafTalebiId");

                    b.HasIndex("SeyahatTalebiId");

                    b.HasIndex("SirketId");

                    b.ToTable("OnayAkislari", (string)null);
                });

            modelBuilder.Entity("PDKS.Data.Entities.OnayDetay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AdimSira")
                        .HasColumnType("integer");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OnayAdimiId")
                        .HasColumnType("integer");

                    b.Property<int>("OnayKaydiId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("OnayTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("OnaylayanKullaniciId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OnayAdimiId");

                    b.HasIndex("OnayKaydiId");

                    b.HasIndex("OnaylayanKullaniciId");

                    b.ToTable("OnayDetaylari", (string)null);
                });

            modelBuilder.Entity("PDKS.Data.Entities.OnayKaydi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GenelDurum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MevcutAdimSira")
                        .HasColumnType("integer");

                    b.Property<string>("ModulTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OnayAkisiId")
                        .HasColumnType("integer");

                    b.Property<int>("ReferansId")
                        .HasColumnType("integer");

                    b.Property<int>("TalepEdenKullaniciId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TalepTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("TamamlanmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("OnayAkisiId");

                    b.HasIndex("TalepEdenKullaniciId");

                    b.ToTable("OnayKayitlari", (string)null);
                });

            modelBuilder.Entity("PDKS.Data.Entities.Oneri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Anonim")
                        .HasColumnType("boolean");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<int?>("DegerlendirenKullaniciId")
                        .HasColumnType("integer");

                    b.Property<string>("DegerlendirmeNotu")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int?>("DegerlendirmePuani")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DegerlendirmeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("EkDosyalar")
                        .HasColumnType("text");

                    b.Property<string>("Kategori")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal?>("OdulMiktari")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("OneriTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DegerlendirenKullaniciId");

                    b.HasIndex("PersonelId");

                    b.HasIndex("SirketId");

                    b.ToTable("Oneriler");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Parametre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Birim")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Deger")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Kategori")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Ad")
                        .IsUnique();

                    b.ToTable("Parametreler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aciklama = "Haftalık standart çalışma günü sayısı",
                            Ad = "Haftalık Çalışma Günü",
                            Birim = "gün",
                            Deger = "5",
                            Kategori = "Çalışma Saatleri",
                            KayitTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            Aciklama = "Günlük standart çalışma saati",
                            Ad = "Günlük Çalışma Saati",
                            Birim = "saat",
                            Deger = "8",
                            Kategori = "Çalışma Saatleri",
                            KayitTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            Aciklama = "İşe geç kalma tolerans süresi",
                            Ad = "Geç Kalma Toleransı",
                            Birim = "dakika",
                            Deger = "15",
                            Kategori = "Toleranslar",
                            KayitTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            Aciklama = "Erken çıkış tolerans süresi",
                            Ad = "Erken Çıkış Toleransı",
                            Birim = "dakika",
                            Deger = "15",
                            Kategori = "Toleranslar",
                            KayitTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            Aciklama = "Fazla mesai ücreti çarpanı",
                            Ad = "Fazla Mesai Çarpanı",
                            Birim = "kat",
                            Deger = "1.5",
                            Kategori = "Mesai",
                            KayitTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            Aciklama = "Hafta sonu mesai ücreti çarpanı",
                            Ad = "Hafta Sonu Mesai Çarpanı",
                            Birim = "kat",
                            Deger = "2",
                            Kategori = "Mesai",
                            KayitTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            Aciklama = "Yıllık ücretli izin günü sayısı",
                            Ad = "Yıllık İzin Günü",
                            Birim = "gün",
                            Deger = "14",
                            Kategori = "İzin",
                            KayitTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("PDKS.Data.Entities.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Adres")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<decimal?>("AvansLimiti")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CikisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Cinsiyet")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int?>("DepartmanId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("GirisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Gorev")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("KanGrubu")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("Maas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notlar")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProfilResmi")
                        .HasColumnType("text");

                    b.Property<string>("SicilNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer")
                        .HasColumnName("sirket_id");

                    b.Property<string>("TcKimlikNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Unvan")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("VardiyaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DepartmanId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("SicilNo")
                        .IsUnique();

                    b.HasIndex("SirketId");

                    b.HasIndex("VardiyaId");

                    b.ToTable("Personeller");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Prim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Ay")
                        .HasColumnType("integer");

                    b.Property<string>("Donem")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("OdendiMi")
                        .HasColumnType("boolean");

                    b.Property<string>("OnayDurumu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("OnayTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("OnaylayanKullaniciId")
                        .HasColumnType("integer");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<string>("PrimAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PrimTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Yil")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OnaylayanKullaniciId");

                    b.HasIndex("PersonelId");

                    b.ToTable("Primler");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("RolAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Roller");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aciklama = "Sistem Yöneticisi",
                            RolAdi = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Aciklama = "İnsan Kaynakları",
                            RolAdi = "IK"
                        },
                        new
                        {
                            Id = 3,
                            Aciklama = "Departman Yöneticisi",
                            RolAdi = "Yönetici"
                        },
                        new
                        {
                            Id = 4,
                            Aciklama = "Çalışan",
                            RolAdi = "Personel"
                        });
                });

            modelBuilder.Entity("PDKS.Data.Entities.SeyahatMasraf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("FaturaDosyasi")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("KdvOrani")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("MasrafTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("SeyahatId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SeyahatId");

                    b.ToTable("SeyahatMasraflari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.SeyahatTalebi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Amac")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<decimal?>("BeklenenMaliyet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DonusTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GidisSehri")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("KalkisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("KonaklamaGerekli")
                        .HasColumnType("boolean");

                    b.Property<string>("OnayDurumu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OtelRezervasyon")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<string>("SeyahatTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TalepTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UcakBileti")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("UlasimTipi")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("UlkeAdi")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("VarisSehri")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.HasIndex("SirketId");

                    b.ToTable("SeyahatTalepleri");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Sikayet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Anonim")
                        .HasColumnType("boolean");

                    b.Property<int?>("AtananKullaniciId")
                        .HasColumnType("integer");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("CozumAciklamasi")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CozumTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("EkDosyalar")
                        .HasColumnType("text");

                    b.Property<string>("Kategori")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("OncelikSeviyesi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SikayetTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AtananKullaniciId");

                    b.HasIndex("PersonelId");

                    b.HasIndex("SirketId");

                    b.ToTable("Sikayetler");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Sirket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("adres");

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean")
                        .HasColumnName("aktif");

                    b.Property<bool>("AnaSirket")
                        .HasColumnType("boolean")
                        .HasColumnName("ana_sirket");

                    b.Property<int?>("AnaSirketId")
                        .HasColumnType("integer")
                        .HasColumnName("ana_sirket_id");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("guncelleme_tarihi");

                    b.Property<string>("Il")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("il");

                    b.Property<string>("Ilce")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ilce");

                    b.Property<DateTime?>("KurulusTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("kurulis_tarihi");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("logo_url");

                    b.Property<string>("Notlar")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("notlar");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("olusturma_tarihi");

                    b.Property<string>("ParaBirimi")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("para_birimi");

                    b.Property<string>("PostaKodu")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("posta_kodu");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("telefon");

                    b.Property<string>("TicariUnvan")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("ticari_unvan");

                    b.Property<string>("Unvan")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("unvan");

                    b.Property<string>("VergiDairesi")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("vergi_dairesi");

                    b.Property<string>("VergiNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("vergi_no");

                    b.Property<string>("Website")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("website");

                    b.HasKey("Id");

                    b.HasIndex("AnaSirketId");

                    b.ToTable("sirketler");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Tatil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("aciklama");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("ad");

                    b.Property<bool>("ResmiTatil")
                        .HasColumnType("boolean")
                        .HasColumnName("resmi_tatil");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("tarih");

                    b.HasKey("Id");

                    b.HasIndex("Tarih")
                        .IsUnique();

                    b.ToTable("tatiller");
                });

            modelBuilder.Entity("PDKS.Data.Entities.ToplantiOdasi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<int?>("Kapasite")
                        .HasColumnType("integer");

                    b.Property<string>("OdaAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Ozellikler")
                        .HasColumnType("text");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SirketId");

                    b.ToTable("ToplantiOdalari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.ToplantiOdasiRezervasyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Katilimcilar")
                        .HasColumnType("text");

                    b.Property<string>("Konu")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("OdaId")
                        .HasColumnType("integer");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.HasIndex("SirketId");

                    b.HasIndex("OdaId", "BaslangicTarihi", "BitisTarihi");

                    b.ToTable("ToplantiOdasiRezervasyonlari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Vardiya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<TimeSpan>("BaslangicSaati")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("BitisSaati")
                        .HasColumnType("interval");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean");

                    b.Property<bool>("EsnekVardiyaMi")
                        .HasColumnType("boolean");

                    b.Property<bool>("GeceVardiyasiMi")
                        .HasColumnType("boolean");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.Property<int>("ToleransSuresiDakika")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SirketId");

                    b.ToTable("Vardiyalar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aciklama = "Standart gündüz vardiyası 08:00-17:00",
                            Ad = "Gündüz Vardiyası",
                            BaslangicSaati = new TimeSpan(0, 8, 0, 0, 0),
                            BitisSaati = new TimeSpan(0, 17, 0, 0, 0),
                            Durum = true,
                            EsnekVardiyaMi = false,
                            GeceVardiyasiMi = false,
                            SirketId = 0,
                            ToleransSuresiDakika = 15
                        },
                        new
                        {
                            Id = 2,
                            Aciklama = "Gece vardiyası 20:00-05:00",
                            Ad = "Gece Vardiyası",
                            BaslangicSaati = new TimeSpan(0, 20, 0, 0, 0),
                            BitisSaati = new TimeSpan(0, 5, 0, 0, 0),
                            Durum = true,
                            EsnekVardiyaMi = false,
                            GeceVardiyasiMi = true,
                            SirketId = 0,
                            ToleransSuresiDakika = 15
                        },
                        new
                        {
                            Id = 3,
                            Aciklama = "Esnek çalışma saatleri",
                            Ad = "Esnek Çalışma",
                            BaslangicSaati = new TimeSpan(0, 9, 0, 0, 0),
                            BitisSaati = new TimeSpan(0, 18, 0, 0, 0),
                            Durum = true,
                            EsnekVardiyaMi = true,
                            GeceVardiyasiMi = false,
                            SirketId = 0,
                            ToleransSuresiDakika = 30
                        });
                });

            modelBuilder.Entity("PDKS.Data.Entities.Zimmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("DemirbasAdi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("DemirbasKodu")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("IadeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<int>("SirketId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TeslimTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.HasIndex("SirketId");

                    b.ToTable("Zimmetler");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Anket", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Kullanici", "OlusturanKullanici")
                        .WithMany()
                        .HasForeignKey("OlusturanKullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OlusturanKullanici");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.AnketCevap", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId");

                    b.HasOne("PDKS.Data.Entities.AnketSoru", "Soru")
                        .WithMany("Cevaplar")
                        .HasForeignKey("SoruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");

                    b.Navigation("Soru");
                });

            modelBuilder.Entity("PDKS.Data.Entities.AnketSoru", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Anket", "Anket")
                        .WithMany("Sorular")
                        .HasForeignKey("AnketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Arac", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Personel", "TahsisliPersonel")
                        .WithMany()
                        .HasForeignKey("TahsisliPersonelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Sirket");

                    b.Navigation("TahsisliPersonel");
                });

            modelBuilder.Entity("PDKS.Data.Entities.AracKullanimRaporu", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Arac", "Arac")
                        .WithMany()
                        .HasForeignKey("AracId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.AracTalebi", "AracTalebi")
                        .WithMany()
                        .HasForeignKey("AracTalebiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arac");

                    b.Navigation("AracTalebi");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("PDKS.Data.Entities.AracTalebi", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Arac", "Arac")
                        .WithMany("AracTalepleri")
                        .HasForeignKey("AracId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Arac");

                    b.Navigation("Personel");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Avans", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Kullanici", "OnaylayanKullanici")
                        .WithMany()
                        .HasForeignKey("OnaylayanKullaniciId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany("Avanslar")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OnaylayanKullanici");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("PDKS.Data.Entities.AvansTalebi", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Personel");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Bildirim", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Kullanici", "Kullanici")
                        .WithMany("Bildirimler")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Cihaz", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Sirket", null)
                        .WithMany("Cihazlar")
                        .HasForeignKey("SirketId");
                });

            modelBuilder.Entity("PDKS.Data.Entities.CihazLog", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Cihaz", "Cihaz")
                        .WithMany("CihazLoglari")
                        .HasForeignKey("CihazId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cihaz");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Departman", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany("Departmanlar")
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Departman", "UstDepartman")
                        .WithMany("AltDepartmanlar")
                        .HasForeignKey("UstDepartmanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Sirket");

                    b.Navigation("UstDepartman");
                });

            modelBuilder.Entity("PDKS.Data.Entities.DeviceToken", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("PDKS.Data.Entities.DosyaTalebi", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Kullanici", "OnaylayanKullanici")
                        .WithMany()
                        .HasForeignKey("OnaylayanKullaniciId");

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OnaylayanKullanici");

                    b.Navigation("Personel");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Duyuru", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Kullanici", "OlusturanKullanici")
                        .WithMany()
                        .HasForeignKey("OlusturanKullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OlusturanKullanici");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Etkinlik", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Kullanici", "DuzenleyenKullanici")
                        .WithMany()
                        .HasForeignKey("DuzenleyenKullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DuzenleyenKullanici");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.EtkinlikKatilimci", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Etkinlik", "Etkinlik")
                        .WithMany("Katilimcilar")
                        .HasForeignKey("EtkinlikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etkinlik");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Forum", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.ForumKonu", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Forum", "Forum")
                        .WithMany("Konular")
                        .HasForeignKey("ForumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Personel", "OlusturanPersonel")
                        .WithMany()
                        .HasForeignKey("OlusturanPersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forum");

                    b.Navigation("OlusturanPersonel");
                });

            modelBuilder.Entity("PDKS.Data.Entities.ForumMesaj", b =>
                {
                    b.HasOne("PDKS.Data.Entities.ForumKonu", "Konu")
                        .WithMany("Mesajlar")
                        .HasForeignKey("KonuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Konu");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("PDKS.Data.Entities.GirisCikis", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Cihaz", "Cihaz")
                        .WithMany("GirisCikislar")
                        .HasForeignKey("CihazId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany("GirisCikislar")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cihaz");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Gorev", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Personel", "Atayan")
                        .WithMany()
                        .HasForeignKey("AtayanPersonelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Gorev", "UstGorev")
                        .WithMany("AltGorevler")
                        .HasForeignKey("UstGorevId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Atayan");

                    b.Navigation("Sirket");

                    b.Navigation("UstGorev");
                });

            modelBuilder.Entity("PDKS.Data.Entities.GorevAtama", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Gorev", "Gorev")
                        .WithMany("GorevAtamalari")
                        .HasForeignKey("GorevId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gorev");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("PDKS.Data.Entities.GorevTanimi", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Departman", "Departman")
                        .WithMany()
                        .HasForeignKey("DepartmanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departman");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.GorevYorum", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Gorev", "Gorev")
                        .WithMany("Yorumlar")
                        .HasForeignKey("GorevId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gorev");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Izin", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Kullanici", "OnaylayanKullanici")
                        .WithMany()
                        .HasForeignKey("OnaylayanKullaniciId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany("Izinler")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OnaylayanKullanici");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("PDKS.Data.Entities.IzinHakki", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Personel");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Kullanici", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithOne("Kullanici")
                        .HasForeignKey("PDKS.Data.Entities.Kullanici", "PersonelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PDKS.Data.Entities.Rol", "Rol")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Personel");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("PDKS.Data.Entities.KullaniciSirket", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Kullanici", "Kullanici")
                        .WithMany("KullaniciSirketler")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany("KullaniciSirketleri")
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Log", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Kullanici", "Kullanici")
                        .WithMany("Loglar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("PDKS.Data.Entities.MalzemeTalebi", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Kullanici", "TeslimEdenKullanici")
                        .WithMany()
                        .HasForeignKey("TeslimEdenKullaniciId");

                    b.Navigation("Personel");

                    b.Navigation("Sirket");

                    b.Navigation("TeslimEdenKullanici");
                });

            modelBuilder.Entity("PDKS.Data.Entities.MasrafTalebi", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.MazeretBildirimi", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Personel", "Onaylayici")
                        .WithMany()
                        .HasForeignKey("OnaylayiciPersonelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Onaylayici");

                    b.Navigation("Personel");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Mesai", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Kullanici", "OnaylayanKullanici")
                        .WithMany()
                        .HasForeignKey("OnaylayanKullaniciId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany("Mesailer")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OnaylayanKullanici");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("PDKS.Data.Entities.OnayAdimi", b =>
                {
                    b.HasOne("PDKS.Data.Entities.OnayAkisi", "OnayAkisi")
                        .WithMany("OnayAdimlari")
                        .HasForeignKey("OnayAkisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Departman", "OnaylayanDepartman")
                        .WithMany()
                        .HasForeignKey("OnaylayanDepartmanId");

                    b.HasOne("PDKS.Data.Entities.Kullanici", "OnaylayanKullanici")
                        .WithMany()
                        .HasForeignKey("OnaylayanKullaniciId");

                    b.HasOne("PDKS.Data.Entities.Rol", "OnaylayanRol")
                        .WithMany()
                        .HasForeignKey("OnaylayanRolId");

                    b.Navigation("OnayAkisi");

                    b.Navigation("OnaylayanDepartman");

                    b.Navigation("OnaylayanKullanici");

                    b.Navigation("OnaylayanRol");
                });

            modelBuilder.Entity("PDKS.Data.Entities.OnayAkisi", b =>
                {
                    b.HasOne("PDKS.Data.Entities.AracTalebi", null)
                        .WithMany("OnayAkislari")
                        .HasForeignKey("AracTalebiId");

                    b.HasOne("PDKS.Data.Entities.AvansTalebi", null)
                        .WithMany("OnayAkislari")
                        .HasForeignKey("AvansTalebiId");

                    b.HasOne("PDKS.Data.Entities.DosyaTalebi", null)
                        .WithMany("OnayAkislari")
                        .HasForeignKey("DosyaTalebiId");

                    b.HasOne("PDKS.Data.Entities.MalzemeTalebi", null)
                        .WithMany("OnayAkislari")
                        .HasForeignKey("MalzemeTalebiId");

                    b.HasOne("PDKS.Data.Entities.MasrafTalebi", null)
                        .WithMany("OnayAkislari")
                        .HasForeignKey("MasrafTalebiId");

                    b.HasOne("PDKS.Data.Entities.SeyahatTalebi", null)
                        .WithMany("OnayAkislari")
                        .HasForeignKey("SeyahatTalebiId");

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.OnayDetay", b =>
                {
                    b.HasOne("PDKS.Data.Entities.OnayAdimi", "OnayAdimi")
                        .WithMany()
                        .HasForeignKey("OnayAdimiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.OnayKaydi", "OnayKaydi")
                        .WithMany("OnayDetaylari")
                        .HasForeignKey("OnayKaydiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Kullanici", "OnaylayanKullanici")
                        .WithMany()
                        .HasForeignKey("OnaylayanKullaniciId");

                    b.Navigation("OnayAdimi");

                    b.Navigation("OnayKaydi");

                    b.Navigation("OnaylayanKullanici");
                });

            modelBuilder.Entity("PDKS.Data.Entities.OnayKaydi", b =>
                {
                    b.HasOne("PDKS.Data.Entities.OnayAkisi", "OnayAkisi")
                        .WithMany()
                        .HasForeignKey("OnayAkisiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Kullanici", "TalepEdenKullanici")
                        .WithMany()
                        .HasForeignKey("TalepEdenKullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OnayAkisi");

                    b.Navigation("TalepEdenKullanici");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Oneri", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Kullanici", "DegerlendirenKullanici")
                        .WithMany()
                        .HasForeignKey("DegerlendirenKullaniciId");

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DegerlendirenKullanici");

                    b.Navigation("Personel");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Personel", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Departman", "Departman")
                        .WithMany("Personeller")
                        .HasForeignKey("DepartmanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany("Personeller")
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Vardiya", "Vardiya")
                        .WithMany("Personeller")
                        .HasForeignKey("VardiyaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Departman");

                    b.Navigation("Sirket");

                    b.Navigation("Vardiya");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Prim", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Kullanici", "OnaylayanKullanici")
                        .WithMany()
                        .HasForeignKey("OnaylayanKullaniciId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany("Primler")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OnaylayanKullanici");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("PDKS.Data.Entities.SeyahatMasraf", b =>
                {
                    b.HasOne("PDKS.Data.Entities.SeyahatTalebi", "Seyahat")
                        .WithMany("Masraflar")
                        .HasForeignKey("SeyahatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seyahat");
                });

            modelBuilder.Entity("PDKS.Data.Entities.SeyahatTalebi", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Sikayet", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Kullanici", "AtananKullanici")
                        .WithMany()
                        .HasForeignKey("AtananKullaniciId");

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtananKullanici");

                    b.Navigation("Personel");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Sirket", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Sirket", "AnaSirketNavigation")
                        .WithMany("BagliSirketler")
                        .HasForeignKey("AnaSirketId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AnaSirketNavigation");
                });

            modelBuilder.Entity("PDKS.Data.Entities.ToplantiOdasi", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.ToplantiOdasiRezervasyon", b =>
                {
                    b.HasOne("PDKS.Data.Entities.ToplantiOdasi", "Oda")
                        .WithMany("Rezervasyonlar")
                        .HasForeignKey("OdaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Oda");

                    b.Navigation("Personel");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Vardiya", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany("Vardiyalar")
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Zimmet", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Sirket", "Sirket")
                        .WithMany()
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Personel");

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Anket", b =>
                {
                    b.Navigation("Sorular");
                });

            modelBuilder.Entity("PDKS.Data.Entities.AnketSoru", b =>
                {
                    b.Navigation("Cevaplar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Arac", b =>
                {
                    b.Navigation("AracTalepleri");
                });

            modelBuilder.Entity("PDKS.Data.Entities.AracTalebi", b =>
                {
                    b.Navigation("OnayAkislari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.AvansTalebi", b =>
                {
                    b.Navigation("OnayAkislari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Cihaz", b =>
                {
                    b.Navigation("CihazLoglari");

                    b.Navigation("GirisCikislar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Departman", b =>
                {
                    b.Navigation("AltDepartmanlar");

                    b.Navigation("Personeller");
                });

            modelBuilder.Entity("PDKS.Data.Entities.DosyaTalebi", b =>
                {
                    b.Navigation("OnayAkislari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Etkinlik", b =>
                {
                    b.Navigation("Katilimcilar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Forum", b =>
                {
                    b.Navigation("Konular");
                });

            modelBuilder.Entity("PDKS.Data.Entities.ForumKonu", b =>
                {
                    b.Navigation("Mesajlar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Gorev", b =>
                {
                    b.Navigation("AltGorevler");

                    b.Navigation("GorevAtamalari");

                    b.Navigation("Yorumlar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Kullanici", b =>
                {
                    b.Navigation("Bildirimler");

                    b.Navigation("KullaniciSirketler");

                    b.Navigation("Loglar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.MalzemeTalebi", b =>
                {
                    b.Navigation("OnayAkislari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.MasrafTalebi", b =>
                {
                    b.Navigation("OnayAkislari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.OnayAkisi", b =>
                {
                    b.Navigation("OnayAdimlari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.OnayKaydi", b =>
                {
                    b.Navigation("OnayDetaylari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Personel", b =>
                {
                    b.Navigation("Avanslar");

                    b.Navigation("GirisCikislar");

                    b.Navigation("Izinler");

                    b.Navigation("Kullanici");

                    b.Navigation("Mesailer");

                    b.Navigation("Primler");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Rol", b =>
                {
                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.SeyahatTalebi", b =>
                {
                    b.Navigation("Masraflar");

                    b.Navigation("OnayAkislari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Sirket", b =>
                {
                    b.Navigation("BagliSirketler");

                    b.Navigation("Cihazlar");

                    b.Navigation("Departmanlar");

                    b.Navigation("KullaniciSirketleri");

                    b.Navigation("Personeller");

                    b.Navigation("Vardiyalar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.ToplantiOdasi", b =>
                {
                    b.Navigation("Rezervasyonlar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Vardiya", b =>
                {
                    b.Navigation("Personeller");
                });
#pragma warning restore 612, 618
        }
    }
}
