// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PDKS.Data.Context;

#nullable disable

namespace PDKS.Data.Migrations
{
    [DbContext(typeof(PDKSDbContext))]
    [Migration("20251015195355_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PDKS.Data.Entities.Avans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("aciklama");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("durum");

                    b.Property<DateTime?>("OdemeTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("odeme_tarihi");

                    b.Property<int?>("OnaylayanId")
                        .HasColumnType("integer")
                        .HasColumnName("onaylayan_id");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer")
                        .HasColumnName("personel_id");

                    b.Property<DateTime>("TalepTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("talep_tarihi");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("numeric")
                        .HasColumnName("tutar");

                    b.HasKey("Id");

                    b.HasIndex("OnaylayanId");

                    b.HasIndex("PersonelId");

                    b.ToTable("avanslar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Bildirim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("baslik");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("integer")
                        .HasColumnName("kullanici_id");

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mesaj");

                    b.Property<bool>("Okundu")
                        .HasColumnType("boolean")
                        .HasColumnName("okundu");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("olusturma_tarihi");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tip");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("bildirimler");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Cihaz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CihazAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cihaz_adi");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean")
                        .HasColumnName("durum");

                    b.Property<string>("IPAdres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ip_adres");

                    b.Property<string>("Lokasyon")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("lokasyon");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("olusturma_tarihi");

                    b.Property<DateTime?>("SonBaglantiZamani")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("son_baglanti_zamani");

                    b.HasKey("Id");

                    b.ToTable("cihazlar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.CihazLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Basarili")
                        .HasColumnType("boolean")
                        .HasColumnName("basarili");

                    b.Property<int>("CihazId")
                        .HasColumnType("integer")
                        .HasColumnName("cihaz_id");

                    b.Property<string>("Detay")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("detay");

                    b.Property<string>("Islem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("islem");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("tarih");

                    b.HasKey("Id");

                    b.HasIndex("CihazId");

                    b.ToTable("cihaz_loglari");
                });

            modelBuilder.Entity("PDKS.Data.Entities.GirisCikis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CihazId")
                        .HasColumnType("integer")
                        .HasColumnName("cihaz_id");

                    b.Property<DateTime?>("CikisZamani")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("cikis_zamani");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("durum");

                    b.Property<bool>("ElleGiris")
                        .HasColumnType("boolean")
                        .HasColumnName("elle_giris");

                    b.Property<int?>("ErkenCikisSuresi")
                        .HasColumnType("integer")
                        .HasColumnName("erken_cikis_suresi");

                    b.Property<int?>("FazlaMesaiSuresi")
                        .HasColumnType("integer")
                        .HasColumnName("fazla_mesai_suresi");

                    b.Property<int?>("GecKalmaSuresi")
                        .HasColumnType("integer")
                        .HasColumnName("gec_kalma_suresi");

                    b.Property<DateTime?>("GirisZamani")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("giris_zamani");

                    b.Property<string>("Kaynak")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("kaynak");

                    b.Property<string>("Not")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("not");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("olusturma_tarihi");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer")
                        .HasColumnName("personel_id");

                    b.HasKey("Id");

                    b.HasIndex("CihazId");

                    b.HasIndex("GirisZamani");

                    b.HasIndex("PersonelId", "GirisZamani");

                    b.ToTable("giris_cikislar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Izin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("aciklama");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("baslangic_tarihi");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("bitis_tarihi");

                    b.Property<int>("GunSayisi")
                        .HasColumnType("integer")
                        .HasColumnName("gun_sayisi");

                    b.Property<string>("IzinTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("izin_tipi");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("olusturma_tarihi");

                    b.Property<string>("OnayDurumu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("onay_durumu");

                    b.Property<DateTime?>("OnayTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("onay_tarihi");

                    b.Property<int?>("OnaylayanId")
                        .HasColumnType("integer")
                        .HasColumnName("onaylayan_id");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer")
                        .HasColumnName("personel_id");

                    b.Property<string>("RedNedeni")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("red_nedeni");

                    b.HasKey("Id");

                    b.HasIndex("OnaylayanId");

                    b.HasIndex("PersonelId");

                    b.ToTable("izinler");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean")
                        .HasColumnName("aktif");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("olusturma_tarihi");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer")
                        .HasColumnName("personel_id");

                    b.Property<int>("RolId")
                        .HasColumnType("integer")
                        .HasColumnName("rol_id");

                    b.Property<string>("SifreHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("sifre_hash");

                    b.Property<DateTime?>("SonGirisTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("son_giris_tarihi");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PersonelId")
                        .IsUnique();

                    b.HasIndex("RolId");

                    b.ToTable("kullanicilar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Detay")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("detay");

                    b.Property<string>("IpAdres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ip_adres");

                    b.Property<string>("Islem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("islem");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("integer")
                        .HasColumnName("kullanici_id");

                    b.Property<string>("Modul")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("modul");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("tarih");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("loglar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Parametre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Anahtar")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("anahtar");

                    b.Property<string>("Deger")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("parametreler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aciklama = "Fazla mesai ücret oranı",
                            Anahtar = "FazlaMesaiOrani",
                            Deger = "1.5"
                        },
                        new
                        {
                            Id = 2,
                            Aciklama = "Geç kalma tolerans süresi (dakika)",
                            Anahtar = "GecKalmaToleransDakika",
                            Deger = "15"
                        },
                        new
                        {
                            Id = 3,
                            Aciklama = "Erken çıkış tolerans süresi (dakika)",
                            Anahtar = "ErkenCikisToLeransDakika",
                            Deger = "15"
                        },
                        new
                        {
                            Id = 4,
                            Aciklama = "Haftalık çalışma günü sayısı",
                            Anahtar = "HaftalikcalismaGun",
                            Deger = "5"
                        },
                        new
                        {
                            Id = 5,
                            Aciklama = "Günlük çalışma saati",
                            Anahtar = "GunlukCalismaSaat",
                            Deger = "8"
                        });
                });

            modelBuilder.Entity("PDKS.Data.Entities.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ad_soyad");

                    b.Property<decimal>("AvansLimiti")
                        .HasColumnType("numeric")
                        .HasColumnName("avans_limiti");

                    b.Property<DateTime?>("CikisTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("cikis_tarihi");

                    b.Property<string>("Departman")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("departman");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean")
                        .HasColumnName("durum");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<DateTime>("GirisTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("giris_tarihi");

                    b.Property<string>("Gorev")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("gorev");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("guncelleme_tarihi");

                    b.Property<decimal>("Maas")
                        .HasColumnType("numeric")
                        .HasColumnName("maas");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("olusturma_tarihi");

                    b.Property<string>("SicilNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("sicil_no");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("telefon");

                    b.Property<int?>("VardiyaId")
                        .HasColumnType("integer")
                        .HasColumnName("vardiya_id");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("SicilNo")
                        .IsUnique();

                    b.HasIndex("VardiyaId");

                    b.ToTable("personeller");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Prim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("aciklama");

                    b.Property<DateTime>("Donem")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("donem");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("olusturma_tarihi");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer")
                        .HasColumnName("personel_id");

                    b.Property<string>("PrimTipi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("prim_tipi");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("numeric")
                        .HasColumnName("tutar");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("primler");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("aciklama");

                    b.Property<string>("RolAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("rol_adi");

                    b.HasKey("Id");

                    b.ToTable("roller");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aciklama = "Sistem Yöneticisi",
                            RolAdi = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Aciklama = "İnsan Kaynakları",
                            RolAdi = "IK"
                        },
                        new
                        {
                            Id = 3,
                            Aciklama = "Departman Yöneticisi",
                            RolAdi = "Yönetici"
                        },
                        new
                        {
                            Id = 4,
                            Aciklama = "Çalışan",
                            RolAdi = "Personel"
                        });
                });

            modelBuilder.Entity("PDKS.Data.Entities.Tatil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("aciklama");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("ad");

                    b.Property<bool>("ResmiTatil")
                        .HasColumnType("boolean")
                        .HasColumnName("resmi_tatil");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("tarih");

                    b.HasKey("Id");

                    b.ToTable("tatiller");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Vardiya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("aciklama");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ad");

                    b.Property<TimeSpan>("BaslangicSaati")
                        .HasColumnType("interval")
                        .HasColumnName("baslangic_saati");

                    b.Property<TimeSpan>("BitisSaati")
                        .HasColumnType("interval")
                        .HasColumnName("bitis_saati");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean")
                        .HasColumnName("durum");

                    b.Property<bool>("EsnekVardiyaMi")
                        .HasColumnType("boolean")
                        .HasColumnName("esnek_vardiya_mi");

                    b.Property<bool>("GeceVardiyasiMi")
                        .HasColumnType("boolean")
                        .HasColumnName("gece_vardiyasi_mi");

                    b.Property<int>("ToleransSuresiDakika")
                        .HasColumnType("integer")
                        .HasColumnName("tolerans_suresi_dakika");

                    b.HasKey("Id");

                    b.ToTable("Vardiyalar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aciklama = "Standart gündüz vardiyası 08:00-17:00",
                            Ad = "Gündüz Vardiyası",
                            BaslangicSaati = new TimeSpan(0, 8, 0, 0, 0),
                            BitisSaati = new TimeSpan(0, 17, 0, 0, 0),
                            Durum = true,
                            EsnekVardiyaMi = false,
                            GeceVardiyasiMi = false,
                            ToleransSuresiDakika = 15
                        },
                        new
                        {
                            Id = 2,
                            Aciklama = "Gece vardiyası 20:00-05:00",
                            Ad = "Gece Vardiyası",
                            BaslangicSaati = new TimeSpan(0, 20, 0, 0, 0),
                            BitisSaati = new TimeSpan(0, 5, 0, 0, 0),
                            Durum = true,
                            EsnekVardiyaMi = false,
                            GeceVardiyasiMi = true,
                            ToleransSuresiDakika = 15
                        },
                        new
                        {
                            Id = 3,
                            Aciklama = "Esnek çalışma saatleri",
                            Ad = "Esnek Çalışma",
                            BaslangicSaati = new TimeSpan(0, 9, 0, 0, 0),
                            BitisSaati = new TimeSpan(0, 18, 0, 0, 0),
                            Durum = true,
                            EsnekVardiyaMi = true,
                            GeceVardiyasiMi = false,
                            ToleransSuresiDakika = 30
                        });
                });

            modelBuilder.Entity("PDKS.Data.Entities.Avans", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Kullanici", "Onaylayan")
                        .WithMany()
                        .HasForeignKey("OnaylayanId");

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany("Avanslar")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Onaylayan");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Bildirim", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("PDKS.Data.Entities.CihazLog", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Cihaz", "Cihaz")
                        .WithMany("CihazLoglari")
                        .HasForeignKey("CihazId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cihaz");
                });

            modelBuilder.Entity("PDKS.Data.Entities.GirisCikis", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Cihaz", "Cihaz")
                        .WithMany("GirisCikislar")
                        .HasForeignKey("CihazId");

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany("GirisCikislar")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cihaz");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Izin", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Kullanici", "Onaylayan")
                        .WithMany()
                        .HasForeignKey("OnaylayanId");

                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany("Izinler")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Onaylayan");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Kullanici", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithOne("Kullanici")
                        .HasForeignKey("PDKS.Data.Entities.Kullanici", "PersonelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PDKS.Data.Entities.Rol", "Rol")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Log", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Kullanici", "Kullanici")
                        .WithMany("Loglar")
                        .HasForeignKey("KullaniciId");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Personel", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Vardiya", "Vardiya")
                        .WithMany("Personeller")
                        .HasForeignKey("VardiyaId");

                    b.Navigation("Vardiya");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Prim", b =>
                {
                    b.HasOne("PDKS.Data.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Cihaz", b =>
                {
                    b.Navigation("CihazLoglari");

                    b.Navigation("GirisCikislar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Kullanici", b =>
                {
                    b.Navigation("Loglar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Personel", b =>
                {
                    b.Navigation("Avanslar");

                    b.Navigation("GirisCikislar");

                    b.Navigation("Izinler");

                    b.Navigation("Kullanici")
                        .IsRequired();
                });

            modelBuilder.Entity("PDKS.Data.Entities.Rol", b =>
                {
                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("PDKS.Data.Entities.Vardiya", b =>
                {
                    b.Navigation("Personeller");
                });
#pragma warning restore 612, 618
        }
    }
}
